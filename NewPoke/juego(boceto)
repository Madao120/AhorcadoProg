import os
from usuario import Usuario
from vista import Vista
from modo import Modo
class Juego:
    def __init__(self, archivo_pokemon, archivo_usuarios):
        self.usuario = Usuario(archivo_usuarios)

        self.modo = Modo(archivo_pokemon)
        self.vista = Vista()
        self.pokemon = str
        self.letras_usuario = [" ", "-"]
        self.letras_incorrectas = []
        self.pistas = list
        self.pistas_mostrar = list
        self.intentos = int
        self.multiplicador = float
        self.puntuacion = float
        pass
    
    def jugar(self):
        if not self.autenticar_usuario():
            return
        while True:
            os.system('cls' if os.name == "nt" else "clear")
            self.usuario.ranking_usuarios()
            self.usuario.mostrar_puntuacion_actual()
            intentos = 6
            letras_usuario = [" ", "-"]
            letras_incorrectas = []

            self.vista.mostrar_modos()
            modo = self.modo.seleccionar_modo()#escojer el numero de modo
            pokemon = self.modo.aplicar_modo(modo, intentos)#Escojer pokemon
            pistas_sin_mostrar = []
            pistas_sin_mostrar = self.modo.escoger_pistas(pokemon, modo, pistas_sin_mostrar)#escojer las pistas segun el modo
            self.usuario.ranking_usuarios()
            while intentos >= 0:
                os.system('cls' if os.name == "nt" else "clear")
                self.usuario.mostrar_puntuacion_actual()
                print(f"\n \n Intentos restantes: {intentos}")

                pistas_mostradas = []
                pistas_mostradas = self.modo.aplicar_pistas(modo, intentos, pistas_mostradas, pistas_sin_mostrar)

                self.vista.mostrar_palabra(pokemon, letras_usuario)
                self.vista.mostrar_pistas(intentos, pistas_sin_mostrar, pistas_mostradas, modo)
                print("Letras incorrectas:", " ".join(letras_incorrectas))  
                intentos = 6
                while True:
                    letra = input("Introduce una letra: ").lower()

                    if len(letra) != 1:
                        print("Por favor, introduce solo una letra.")
                        continue

                    if not letra.isalpha():
                        print("Solo se permiten letras. No introduzcas números ni signos.")
                        continue

                    if letra in self.letras_usuario or letra in self.letras_incorrectas:
                        print("Ya has ingresado esta letra.")
                        continue
                    break
                
                if letra in pokemon:
                    print("¡Correcto!")
                    letras_usuario.append(letra)
                else:
                    print("Incorrecto.")
                    letras_incorrectas.append(letra)
                    intentos -= 1

                if all(letra in letras_usuario for letra in pokemon):
                    print(f"¡Felicidades! Has capturado un {pokemon}")
                    if modo != 7:
                        self.usuario.actualizar_puntuacion(intentos * 5)
                    else:
                        self.usuario.actualizar_puntuacion(intentos * 10)
                    break
            else:
                print(f"Vaya, parece que se te ha escapado. El Pokémon era: {pokemon}")
                self.usuario.actualizar_puntuacion(-10)

            opcion = input("\n¿Quieres jugar otra vez? (s/n): ").lower()
            if opcion != "s":
                print("Gracias por jugar. ¡Hasta la próxima!")
                break  # Se sale del bucle y rompe el while True


    def autenticar_usuario(self):
        while True:
            opcion = input("¿Tienes cuenta? (s/n): ").lower()
            if opcion == "s":
                usuario = input("Usuario: ")
                contraseña = input("Contraseña: ")
                if self.usuario.iniciar_sesion(usuario, contraseña):
                    return True
            elif opcion == "n":
                usuario = input("Elige un nombre de usuario: ")
                contraseña = input("Elige una contraseña: ")
                if self.usuario.registrar_usuario(usuario, contraseña):
                    return True
            else:
                print("Opción no válida.")